name: IlluMefy-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: CI(Build and Test)
    runs-on: macos-latest
    env:
      scheme: "IlluMefy"
      platform: "iOS Simulator"
      destinationName: "iPhone 16"

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache SPM
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
              ${{ runner.os }}-spm-

      - name: Cache Homebrew
        uses: actions/cache@v3
        with:
            path: |
              ~/Library/Caches/Homebrew
              /opt/homebrew
            key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Setup SwiftGen
        run: |
          if ! command -v swiftgen &> /dev/null; then
            echo "Installing SwiftGen..."
            brew install swiftgen
          else
            echo "SwiftGen already cached"
          fi

      - name: Generate Resources
        run: |
          cd IlluMefy/IlluMefy
          mkdir Generated
          swiftgen config run --config swiftgen.yml

      - name: Build
        env:
          scheme: ${{ env.scheme }}
          platform: ${{ env.platform }}
          destinationName: ${{ env.destinationName }}
        run: |
          cd IlluMefy
          xcodebuild \
            -project  IlluMefy.xcodeproj \
            -scheme "$scheme" \
            -destination "platform=$platform,name=$destinationName" \
            -skipPackagePluginValidation \
            -configuration Debug \
            build-for-testing
      - name: Test
        env:
          scheme: ${{ env.scheme }}
          platform: ${{ env.platform }}
        run: |
          cd IlluMefy
          xcodebuild test-without-building \
            -project IlluMefy.xcodeproj \
            -scheme "$scheme" \
            -destination "platform=$platform,name=$destinationName"